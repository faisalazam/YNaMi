welcome.message=Welcome Faisal

ynami.spring.datasource.profile=h2
spring.profiles.active=dev,${ynami.spring.datasource.profile},flyway,flyway-callback,actuator,togglz,https

server.secure.port=8443
server.insecure.port=8080

server.servlet.context-path=/ynami

server.port=${server.insecure.port}

# ===============================
# = JPA / HIBERNATE
# ===============================
#
spring.datasource.name=YNaMi

# Show or not log for each sql query
spring.jpa.show-sql = true
spring.jpa.properties.hibernate.format_sql=true

# Hibernate ddl auto (create, create-drop, validate, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in the project
# validate checks the presence of tables, columns, id generators
# It will check that our entities match the created schema on application start-up.
spring.jpa.hibernate.ddl-auto=validate

# don't generate the schema DDL commands from our entity models
spring.jpa.properties.jakarta.persistence.schema-generation.scripts.action=none

# Naming strategy
# org.hibernate.tool.schema.spi.SchemaManagementException: Schema-validation: missing table [audit_entry]
# PhysicalNamingStrategyStandardImpl will ensure that AuditEntry name remains AuditEntry instead of becoming audit_entry
# without the use of this naming strategy, entity/table names will be converted to all lower case with underscores in-between.
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl


spring.jpa.properties.jadira.usertype.autoRegisterUserTypes = true

#spring.jpa.properties.hibernate.globally_quoted_identifiers=true


# ===============================
# = Config Properties
# ===============================
#
config.togglz.enabled=true
config.persistable.feature.toggles=true
config.redirect.http.to.https.enabled=true