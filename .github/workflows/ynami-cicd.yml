name: 'YNaMi CI/CD'
on: push
env:
  JAVA_VERSION: 20
  MYSQL_VERSION: 8.0
  UPLOADED_ARTIFACTS_DIR: 'gh-pages'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 'Get the latest code from the `${{ github.repository }}` repository'
        uses: actions/checkout@v3
      - name: 'Set up the Oracle JDK `${{ env.JAVA_VERSION }}`'
        uses: './.github/actions/install-java'
        with:
          JAVA_VERSION_TO_INSTALL: ${{ env.JAVA_VERSION }}
      - name: 'Cache Maven packages'
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: 'Compiles the application code'
        run: mvn clean compile test-compile --file pom.xml

  unit-tests:
    runs-on: ubuntu-latest

    steps:
      - name: 'Get the latest code from the `${{ github.repository }}` repository'
        uses: actions/checkout@v3
      - name: 'Set up the Oracle JDK `${{ env.JAVA_VERSION }}`'
        uses: './.github/actions/install-java'
        with:
          JAVA_VERSION_TO_INSTALL: ${{ env.JAVA_VERSION }}
      - name: 'Run the unit tests'
        run: mvn -Djacoco.haltOnFailure=false clean test -P ut --file pom.xml

  migration-tests:
    runs-on: ubuntu-latest

    steps:
      - name: 'Get the latest code from the `${{ github.repository }}` repository'
        uses: actions/checkout@v3
      - name: 'Set up the Oracle JDK `${{ env.JAVA_VERSION }}`'
        uses: './.github/actions/install-java'
        with:
          JAVA_VERSION_TO_INSTALL: ${{ env.JAVA_VERSION }}
      - name: 'Set up MySQL'
        run: sudo systemctl start mysql
      - name: 'Run the migration tests'
        run: mvn clean test -P mt --file pom.xml

  integration-tests-mysql:
    runs-on: ubuntu-latest

    steps:
      - name: 'Get the latest code from the `${{ github.repository }}` repository'
        uses: actions/checkout@v3
      - name: 'Set up the Oracle JDK `${{ env.JAVA_VERSION }}`'
        uses: './.github/actions/install-java'
        with:
          JAVA_VERSION_TO_INSTALL: ${{ env.JAVA_VERSION }}
      - name: 'Set up MySQL'
        run: sudo systemctl start mysql
      - name: 'Run the integration tests'
        run: mvn -Djacoco.haltOnFailure=false clean integration-test -P it,mysql --file pom.xml

  acceptance-cucumber-tests:
    runs-on: ubuntu-latest

    steps:
      - name: 'Get the latest code from the `${{ github.repository }}` repository'
        uses: actions/checkout@v3
      - name: 'Set up the Oracle JDK `${{ env.JAVA_VERSION }}`'
        uses: './.github/actions/install-java'
        with:
          JAVA_VERSION_TO_INSTALL: ${{ env.JAVA_VERSION }}
      - name: 'Run the acceptance-cucumber tests'
        run: mvn clean test -P act --file pom.xml

  acceptance-selenium-tests:
    runs-on: ubuntu-latest

    steps:
      - name: 'Get the latest code from the `${{ github.repository }}` repository'
        uses: actions/checkout@v3
      - name: 'Set up the Oracle JDK `${{ env.JAVA_VERSION }}`'
        uses: './.github/actions/install-java'
        with:
          JAVA_VERSION_TO_INSTALL: ${{ env.JAVA_VERSION }}
      - name: 'Run the acceptance-selenium tests'
        run: mvn clean test -P ast --file pom.xml

  penetration-tests:
    runs-on: ubuntu-latest

    steps:
      - name: 'Get the latest code from the `${{ github.repository }}` repository'
        uses: actions/checkout@v3
      - name: 'Set up the Oracle JDK `${{ env.JAVA_VERSION }}`'
        uses: './.github/actions/install-java'
        with:
          JAVA_VERSION_TO_INSTALL: ${{ env.JAVA_VERSION }}
      - name: 'Run the penetration tests'
        run: mvn clean test -P pt --file pom.xml

#  upload-artifacts:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: 'Uploads the results to ${{ env.UPLOADED_ARTIFACTS_DIR }} folder'
#        uses: actions/upload-artifact@v3
#        if: success() || failure()
#        with:
#          name: ${{ env.UPLOADED_ARTIFACTS_DIR }} # Name of the folder
#          path: target                            # Path to test results
